package main

type NistComp struct {
	Provider      string
	Framework     string
	Frameworkdesc string
	Id            string
	Description   string
	Section       string
	SubSection    string
	Service       string
	Type          string
	Checks        []string
}

var accsec_Predefine_IAM_Roles = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Predefine IAM Roles",
	Description:   "Check if exists predefine IAM Roles",
	Section:       "Deploy account from predefined IaC template",
	Service:       "IAM",
	Type:          "Automated",
	Checks:        []string{"iam_no_custom_policy_permissive_role_assumption", "iam_policy_attached_only_to_group_or_roles", "iam_support_role_created", "iam_role_cross_service_confused_deputy_prevention"},
}
var accsec_Enabled_security_services = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enabled security services",
	Description:   "Check if security services are enabled",
	Section:       "Deploy account from predefined IaC template",
	Service:       "SecurityServices",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled", "guardduty_is_enabled", "accessanalyzer_enabled", "macie_is_enabled"},
}
var accsec_IDC_integration_SSO_configuration = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "IDC integration, SSO configuration",
	Description:   "Check if IDC integration and SSO configuration is enabled",
	Section:       "Deploy account from predefined IaC template",
	Service:       "IAM Identity Center",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Organization_invitation = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Organization invitation",
	Description:   "Check if organization invitation is enabled",
	Section:       "Deploy account from predefined IaC template",
	Service:       "Organizations",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Billing_emergency_security_contacts = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Billing, emergency, security contacts",
	Description:   "Check if billing, emergency, security contacts are configured",
	Section:       "Deploy account from predefined IaC template",
	Service:       "Billing",
	Type:          "Automated",
	Checks:        []string{"account_maintain_current_contact_details", "account_security_contact_information_is_registered"},
}
var accsec_Root_user_distribution_email_MFA = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Root user - distribution email + MFA",
	Description:   "Check if root user has distribution email and MFA enabled",
	Section:       "Deploy account from predefined IaC template",
	Service:       "IAM",
	Type:          "Automated",
	Checks:        []string{"iam_root_mfa_enabled", "iam_root_hardware_mfa_enabled"},
}
var accsec_S3_Block_Public_Access = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "S3 Block Public Access",
	Description:   "Block public access to S3 buckets",
	Section:       "Deploy account from predefined IaC template",
	Service:       "S3",
	Type:          "Automated",
	Checks:        []string{"s3_account_level_public_access_blocks", "s3_bucket_public_access", "s3_bucket_level_public_access_block"},
}
var accsec_Disable_AMI_public_sharing = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Disable AMI public sharing",
	Description:   "Disable AMI public sharing",
	Section:       "Deploy account from predefined IaC template",
	Service:       "EC2",
	Type:          "Automated",
	Checks:        []string{"ec2_ami_public"},
}
var accsec_Block_unused_regions = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Block unused regions",
	Description:   "Block unsued regions",
	Section:       "SCPs",
	SubSection:    "Apply existing SCPs based on OU placement",
	Service:       "IAM",
	Type:          "Automated",
	Checks:        []string{"organizations_scp_check_deny_regions"},
}
var accsec_Block_tampering_with_security_related_settings_and_services = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Block tampering with security-related settings and services",
	Description:   "Block tampering with security-related settings and services",
	Section:       "SCPs",
	SubSection:    "Apply existing SCPs based on OU placement",
	Service:       "IAM",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Restrict_instances_types = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Restrict instances types",
	Description:   "Restrict instances types",
	Section:       "SCPs",
	SubSection:    "Apply existing SCPs based on OU placement",
	Service:       "IAM",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Block_root_user = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Block root user",
	Description:   "Block root user",
	Section:       "SCPs",
	SubSection:    "Apply existing SCPs based on OU placement",
	Service:       "IAM",
	Type:          "Automated",
	Checks:        []string{"iam_no_root_access_key", "iam_avoid_root_usage"},
}
var accsec_Add_custom_SCPs_if_required = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Add custom SCPs if required",
	Description:   "Add custom SCPs if required",
	Section:       "SCPs",
	Service:       "IAM",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Send_DNS_Resolvers_queries_to_SIEM = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Send DNS Resolvers queries to SIEM",
	Description:   "Send DNS Resolvers queries to SIEM",
	Section:       "Logging",
	Service:       "Logging",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Send_VPC_Flow_Logs_only_DENYs_to_S3_bucket = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Send VPC Flow Logs (only DENYs) to S3 bucket",
	Description:   "Send VPC Flow Logs (only DENYs) to S3 bucket",
	Section:       "Logging",
	Service:       "Logging",
	Type:          "Automated",
	Checks:        []string{"vpc_flow_logs_enabled"},
}
var accsec_Send_S3_access_logs_for_critical_buckets_to_separate_S3_bucket = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Send S3 access logs for critical buckets to separate S3 bucket",
	Description:   "Send S3 access logs for critical buckets to separate S3 bucket",
	Section:       "Logging",
	Service:       "Logging",
	Type:          "Automated",
	Checks:        []string{"cloudtrail_logs_s3_bucket_access_logging_enabled", "cloudtrail_s3_dataevents_write_enabled"},
}
var accsec_Establish_ready_to_be_enabled_pipelines_to_deliver_ALB_and_CFD_to_SIEM_to_toggle_in_case_of_emergency_and_investigations = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Establish ready-to-be-enabled pipelines to deliver ALB and CFD to SIEM to toggle in case of emergency and investigations",
	Description:   "Establish ready-to-be-enabled pipelines to deliver ALB and CFD to SIEM to toggle in case of emergency and investigations",
	Section:       "Logging",
	Service:       "Logging",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alert_on_each_High_finding = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on each High finding",
	Description:   "Checks that GuardDuty is enabled and configured to send High findings to CloudWatch Events",
	Section:       "Alerting",
	SubSection:    "GuardDuty",
	Service:       "GuardDuty",
	Type:          "Automated",
	Checks:        []string{"guardduty_is_enabled", "guardduty_is_enabled"},
}
var accsec_Alerts_based_on_aggregated_findings_with_severity_Medium_and_below = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alerts based on aggregated findings with severity Medium and below",
	Description:   "Alert based on aggregated findings with severity Medium and below",
	Section:       "Alerting",
	SubSection:    "GuardDuty",
	Service:       "GuardDuty",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Critical_alert_on_every_root_user_activity = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Critical alert on every root user activity",
	Description:   "Send critical alert on every root user activity",
	Section:       "Alerting",
	SubSection:    "CloudTrail",
	Service:       "CloudTrail",
	Type:          "Automated",
	Checks:        []string{"cloudwatch_log_metric_filter_root_usage"},
}
var accsec_Critical_alert_on_cloudtrail_settings_changes = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Critical alert on cloudtrail settings changes",
	Description:   "Send critical alert on cloudtrail settings changes",
	Section:       "Alerting",
	SubSection:    "CloudTrail",
	Service:       "CloudTrail",
	Type:          "Automated",
	Checks:        []string{"cloudwatch_log_metric_filter_and_alarm_for_cloudtrail_configuration_changes_enabled"},
}
var accsec_Alert_on_rise_of_ConsoleLoginFailures_events = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on rise of ConsoleLoginFailures events",
	Description:   "Alert on rise ConsoleLoginFailures events",
	Section:       "Alerting",
	SubSection:    "CloudTrail",
	Service:       "CloudTrail",
	Type:          "Automated",
	Checks:        []string{"cloudwatch_log_metric_filter_authentication_failures"},
}
var accsec_Alert_on_IAM_user_changes = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on IAM user changes",
	Description:   "Alert on IAM user changes",
	Section:       "Alerting",
	SubSection:    "CloudTrail",
	Service:       "CloudTrail",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alert_on_snapshot_manipulations = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on snapshot manipulations",
	Description:   "Alert when a snapshot is manipulated",
	Section:       "Alerting",
	SubSection:    "CloudTrail",
	Service:       "CloudTrail",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alerts_on_raised_cost_anomaly_events = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alerts on raised cost anomaly events",
	Description:   "Alert when cost anomaly events are raised",
	Section:       "Alerting",
	SubSection:    "Cost Anomaly",
	Service:       "Billing",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alerts_based_on_at_least_each_new_CRITICAL_finding = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alerts based on (at least) each new CRITICAL finding",
	Description:   "Alerts triggered by every new CRITICAL finding, at a minimum.",
	Section:       "Alerting",
	SubSection:    "SecurityHub",
	Service:       "SecurityHub",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Realert_on_inactivity_in_a_set_period = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Realert on inactivity in a set period",
	Description:   "Activate a re-alert system for detecting inactivity within a specified time frame.",
	Section:       "Alerting",
	SubSection:    "SecurityHub",
	Service:       "SecurityHub",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alerts_based_on_rate_based_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alerts based on rate-based rules",
	Description:   "Notifications triggered by rate-based regulations",
	Section:       "Alerting",
	SubSection:    "WAF",
	Service:       "WAF",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alerts_based_on_high_amount_of_blocked_requests_by_managed_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alerts based on high amount of blocked requests by managed rules",
	Description:   "Notifications triggered by a significant number of blocked requests as a result of managed rules.",
	Section:       "Alerting",
	SubSection:    "WAF",
	Service:       "WAF",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alert_based_on_DDoSDetected_metric = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert based on DDoSDetected metric",
	Description:   "Generate an alert triggered by the detection of a DDoS attack based on the DDoSDetected metric.",
	Section:       "Alerting",
	SubSection:    "Shield",
	Service:       "Shield",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Adopt_incident_response_guide_and_prepared_battle_card = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Adopt incident response guide and prepared battle card",
	Description:   "Utilize the incident response manual and have the battle card ready for use.",
	Section:       "Alerting",
	SubSection:    "Shield",
	Service:       "Shield",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alert_on_blocked_DNS_query = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on blocked DNS query",
	Description:   "Notify when a DNS query is obstructed.",
	Section:       "Alerting",
	SubSection:    "R53 DNS Resolver",
	Service:       "Route53",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Alert_on_critical_vulnerabilities_in_AMIs_Images = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Alert on critical vulnerabilities in AMIs/Images",
	Description:   "Notification regarding severe vulnerabilities detected in AMIs/Images.",
	Section:       "Alerting",
	SubSection:    "Vulnerability Scanning",
	Service:       "Inspector",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Create_Cost_Anomaly_Detection_monitors_to_alert_spending_anomalies = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Create Cost Anomaly Detection monitors to alert spending anomalies",
	Description:   "Develop monitoring systems for detecting cost anomalies and generating alerts for irregular spending patterns.",
	Section:       "Budget Alarms",
	SubSection:    "Prod",
	Service:       "CloudWatch",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Create_Cost_Anomaly_Detection_monitors_to_alert_spending_anomalies1 = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Create Cost Anomaly Detection monitors to alert spending anomalies",
	Description:   "Establish monitoring systems for cost anomaly detection to promptly notify about unusual spending patterns.",
	Section:       "Budget Alarms",
	SubSection:    "QA",
	Service:       "CloudWatch",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Configure_Budgets_Actions_to_stop_services_in_cases_of_big_unexpected_spendings = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Configure Budgets Actions to stop services in cases of big unexpected spendings",
	Description:   "Set up Budgets Actions to halt services when significant unexpected expenses occur.",
	Section:       "Budget Alarms",
	SubSection:    "QA",
	Service:       "SNS",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Create_analyzers_in_each_active_regions = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Create analyzers in each active regions",
	Description:   "Establish analyzers within every active region.",
	Section:       "IAM Access Analyzer",
	Service:       "IAM Access Analyzer",
	Type:          "Automated",
	Checks:        []string{"accessanalyzer_enabled", "accessanalyzer_enabled_without_findings"},
}
var accsec_Verify_that_events_are_present_in_SecurityHub_aggregated_view = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Verify that events are present in SecurityHub aggregated view",
	Description:   "Confirm the presence of events within the aggregated view of SecurityHub.",
	Section:       "IAM Access Analyzer",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled", "accessanalyzer_enabled", "accessanalyzer_enabled_without_findings"},
}
var accsec_Consider_enabling_for_critical_buckets_only = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Consider enabling for critical buckets only",
	Description:   "Please contemplate activating this feature exclusively for essential or crucial buckets.",
	Section:       "Macie",
	Service:       "Macie",
	Type:          "Automated",
	Checks:        []string{"macie_is_enabled"},
}
var accsec_Enable_and_configure_AWS_Inspector = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable and configure AWS Inspector",
	Description:   "Enable and set up AWS Inspector.",
	Section:       "Vulnerability Scanning",
	SubSection:    "EC2 used as servers",
	Service:       "EC2",
	Type:          "Automated",
	Checks:        []string{"inspector2_findings_exist"},
}
var accsec_Export_scan_results_as_metrics_in_centralized_collector = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Export scan results as metrics in centralized collector",
	Description:   "Export scan results as metrics to a centralized collector.",
	Section:       "Vulnerability Scanning",
	SubSection:    "EC2 used as servers",
	Service:       "EC2",
	Type:          "Automated",
	Checks:        []string{"guardduty_centrally_managed"},
}
var accsec_Scan_images_for_vulnerability_on_upload_to_ECR = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Scan images for vulnerability on upload to ECR",
	Description:   "Check uploaded images for vulnerabilities when adding them to the ECR (Elastic Container Registry).",
	Section:       "Vulnerability Scanning",
	SubSection:    "ECR used as docker images hub",
	Service:       "ECR",
	Type:          "Automated",
	Checks:        []string{"inspector2_findings_exist", "ecr_registry_scan_images_on_push_enabled", "ecr_repositories_scan_vulnerabilities_in_latest_image", "ecr_repositories_scan_images_on_push_enabled"},
}
var accsec_Deploy_solution_to_periodically_rescan_currently_used_images_and_report_found_vulnerabilities = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Deploy solution to periodically rescan currently used images and report found vulnerabilities",
	Description:   "Implement a solution to conduct regular scans on currently employed images and notify about any identified vulnerabilities.",
	Section:       "Vulnerability Scanning",
	SubSection:    "ECR used as docker images hub",
	Service:       "ECR",
	Type:          "Automated",
	Checks:        []string{"ecr_repositories_scan_vulnerabilities_in_latest_image"},
}
var accsec_Export_scan_results_as_metrics_in_centralized_collector1 = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Export scan results as metrics in centralized collector",
	Description:   "Generate metric data from scan results and store it in a centralized collector.",
	Section:       "Vulnerability Scanning",
	SubSection:    "ECR used as docker images hub",
	Service:       "ECR",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Enable_as_part_of_Organization_trail = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable as part of Organization trail",
	Description:   "Activate as a component of the Organization trail.",
	Section:       "AWS Cloudtrail",
	Service:       "CloudTrail",
	Type:          "Automated",
	Checks:        []string{"cloudtrail_multi_region_enabled", "cloudtrail_multi_region_enabled_logging_management_events"},
}
var accsec_Confirm_that_logs_are_present_in_S3_bucket_and_SIEM = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Confirm that logs are present in S3 bucket and SIEM",
	Description:   "Verify the existence of logs within both the S3 bucket and the SIEM system.",
	Section:       "AWS Cloudtrail",
	Service:       "CloudTrail",
	Type:          "Automated",
	Checks:        []string{"cloudtrail_logs_s3_bucket_access_logging_enabled", "cloudtrail_s3_dataevents_read_enabled", "cloudtrail_s3_dataevents_write_enabled"},
}
var accsec_Deploy_solution_to_alert_on_at_least_critical_new_findings = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Deploy solution to alert on at least critical new findings",
	Description:   "Implement a solution to trigger alerts for newly identified critical issues at minimum.",
	Section:       "Enable AWS SecurityHub",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled"},
}
var accsec_Apply_SecurityHub_Central_Configuration_for_Organization = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Apply SecurityHub Central Configuration for Organization",
	Description:   "Apply SecurityHub Central Configuration for Organization",
	Section:       "Enable AWS SecurityHub",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled"},
}
var accsec_Enable_disable_additional_standards_and_controls = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable/disable additional standards and controls",
	Description:   "Implement SecurityHub Central Configuration across the organization.",
	Section:       "Enable AWS SecurityHub",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled"},
}
var accsec_Confirm_that_findings_are_being_visible_in_the_aggregated_view = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Confirm that findings are being visible in the aggregated view",
	Description:   "Please verify that the findings are visible when viewed in the aggregated perspective.",
	Section:       "Enable AWS SecurityHub",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled"},
}
var accsec_Ensure_that_there_are_no_critical_and_considered_critical_findings_present_in_account = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Ensure that there are no critical (and considered critical) findings present in account",
	Description:   "Make certain that there are no critical findings, whether deemed critical or not, within the account.",
	Section:       "Enable AWS SecurityHub",
	Service:       "SecurityHub",
	Type:          "Automated",
	Checks:        []string{"securityhub_enabled"},
}
var accsec_Enable_continuous_recording_for_most_of_the_resources = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable continuous recording for most of the resources",
	Description:   "Activate continuous recording for the majority of resources.",
	Section:       "Enable AWS Config",
	Service:       "Config",
	Type:          "Automated",
	Checks:        []string{"config_recorder_all_regions_enabled"},
}
var accsec_Consider_periodic_recording_for_some_resources_to_optimize_bill = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Consider periodic recording for some resources to optimize bill",
	Description:   "Think about implementing scheduled monitoring for specific resources in order to maximize cost efficiency.",
	Section:       "Enable AWS Config",
	Service:       "Config",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Confirm_that_records_are_present_in_central_aggregator = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Confirm that records are present in central aggregator",
	Description:   "Confirm that records are present in central aggregator",
	Section:       "Enable AWS Config",
	Service:       "Config",
	Type:          "Automated",
	Checks:        []string{"config_recorder_all_regions_enabled"},
}
var accsec_Enable_as_part_of_central_configuration_for_Organization = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable as part of central configuration for Organization",
	Description:   "Please verify the existence of records within the central aggregator.",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_centrally_managed"},
}
var accsec_Threat_Detection = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Threat Detection",
	Description:   "Detection of Threats in your AWS environment",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_RDS_protection = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "RDS protection",
	Description:   "Protection for RDS instances",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Lambda_protection = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Lambda protection",
	Description:   "Protection using Lambda",
	Section:       "Enable GuardDuty",
	Service:       "Lambda",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_S3_protection = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "S3 protection",
	Description:   "Protection using S3",
	Section:       "Enable GuardDuty",
	Service:       "S3",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Malware_Scanning = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Malware Scanning",
	Description:   "Conducting a Comprehensive Scan for Malicious Software",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Confirm_that_events_are_present_in_SIEM = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Confirm that events are present in SIEM",
	Description:   "Confirm that events are present in SIEM",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Apply_suppression_filters_to_disable_useless_findings = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Apply suppression filters to disable useless findings",
	Description:   "Implementing suppression filters to deactivate non-essential detections.",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Include_in_process_of_incident_response_based_on_events = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Include in process of incident response based on events",
	Description:   "Incorporate within the procedural framework of incident response, taking into account the triggering events.",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Must",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_Runtime_protection = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Runtime protection",
	Description:   "Brand new and in need of thorough testing.",
	Section:       "Enable GuardDuty",
	Service:       "GuardDuty",
	Type:          "Optional",
	Checks:        []string{"guardduty_is_enabled", "guardduty_no_high_severity_findings"},
}
var accsec_EKS_protection_if_EKS_is_used = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "EKS protection (if EKS is used)",
	Description:   "Enhanced Kubernetes Security (EKS) protection, if the Kubernetes service is employed.",
	Section:       "Enable GuardDuty",
	Service:       "EKS",
	Type:          "Optional",
	Checks:        []string{},
}
var accsec_Apply_managed_domain_name_lists_for_Resolver_in_block_mode = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Apply managed domain name lists for Resolver in block mode)",
	Description:   "Utilize managed domain name lists within Resolver to implement block mode.",
	Section:       "R53 DNS Resolver Firewall",
	Service:       "Route53",
	Type:          "Automated",
	Checks:        []string{"route53_domains_privacy_protection_enabled", "route53_domains_transferlock_enabled"},
}
var accsec_Use_strictly_AWS_VPC_DNS_resolver = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Use strictly AWS VPC DNS resolver",
	Description:   "Exclusively Employ Amazon Web Services (AWS) Virtual Private Cloud (VPC) DNS Resolver",
	Section:       "R53 DNS Resolver Firewall",
	Service:       "Route53",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Ban_outbound_DNS_calls_from_all_VPCs_to_ports_53 = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Ban outbound DNS calls from all VPCs to ports 53",
	Description:   "Prohibit all Virtual Private Clouds (VPCs) from initiating outbound DNS calls on port 53.",
	Section:       "R53 DNS Resolver Firewall",
	Service:       "Route53",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Apply_custom_threat_list_for_GuardDuty_to_alert_on_access_to_DoH_servers = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Apply custom threat list for GuardDuty to alert on access to DoH servers",
	Description:   "Implement a customized threat list within GuardDuty to generate alerts when there is access to Domain Name System over HTTPS (DoH) servers.",
	Section:       "R53 DNS Resolver Firewall",
	Service:       "Route53",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Enable_Shield_Advanced_subscription_for_public_facing_account = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable Shield Advanced subscription for public facing account",
	Description:   "Activate the Shield Advanced subscription for the publicly accessible account.",
	Section:       "Shield Advanced",
	Service:       "Shield Advanced",
	Type:          "Automated",
	Checks:        []string{"shield_advanced_protection_in_route53_hosted_zones", "shield_advanced_protection_in_classic_load_balancers", "shield_advanced_protection_in_internet_facing_load_balancers", "shield_advanced_protection_in_cloudfront_distributions", "shield_advanced_protection_in_associated_elastic_ips", "shield_advanced_protection_in_global_accelerators"},
}
var accsec_Export_metrics_in_centralized_collector = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Export metrics in centralized collector",
	Description:   "Exporting metrics to a centralized collector for data aggregation and analysis.",
	Section:       "Shield Advanced",
	Service:       "Shield Advanced",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Create_DDoS_battle_card_with_main_info_about_protected_services = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Create DDoS battle card with main info about protected services",
	Description:   "Prepare a Detailed Distributed Denial of Service (DDoS) Battle Card Encompassing Key Information Regarding Safeguarded Services.",
	Section:       "Shield Advanced",
	Service:       "Shield Advanced",
	Type:          "Automated",
	Checks:        []string{"shield_advanced_protection_in_route53_hosted_zones", "shield_advanced_protection_in_classic_load_balancers", "shield_advanced_protection_in_internet_facing_load_balancers", "shield_advanced_protection_in_cloudfront_distributions", "shield_advanced_protection_in_associated_elastic_ips", "shield_advanced_protection_in_global_accelerators"},
}
var accsec_CFD_ALB_secret_rotation_architecture = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "CFD + ALB + secret rotation architecture",
	Description:   "Designing an Architecture for Computational Fluid Dynamics (CFD), Application Load Balancing (ALB), and Secret Rotation Integration",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Must",
	Checks:        []string{"apigateway_restapi_waf_acl_attached", "cloudfront_distributions_using_waf", "elbv2_waf_acl_attached"},
}
var accsec_Predefined_set_of_managed_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Predefined set of managed rules",
	Description:   "A pre-established collection of rules under management control.",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Must",
	Checks:        []string{"apigateway_restapi_waf_acl_attached", "cloudfront_distributions_using_waf", "elbv2_waf_acl_attached"},
}
var accsec_Global_allow_and_block_lists = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Global allow - and block-lists",
	Description:   "Establishing International Lists for Permissions and Restrictions",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Must",
	Checks:        []string{"apigateway_restapi_waf_acl_attached", "cloudfront_distributions_using_waf", "elbv2_waf_acl_attached"},
}
var accsec_Blanket_rate_based_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Blanket rate-based rules",
	Description:   "Establishing rules based on a standardized, all-encompassing rate.",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Must",
	Checks:        []string{},
}
var accsec_Service_unique_exclusion_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Service-unique exclusion rules",
	Description:   "Exclusion rules specific to the service provided.",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Must",
	Checks:        []string{"apigateway_restapi_waf_acl_attached", "cloudfront_distributions_using_waf", "elbv2_waf_acl_attached"},
}
var accsec_Additional_managed_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Additional managed rules",
	Description:   "Supplementary managed rules",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Discuss",
	Checks:        []string{},
}
var accsec_Scoped_down_rate_based_rules = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Scoped-down rate-based rules",
	Description:   "Rate-based rules with a narrowed scope",
	Section:       "WAFv2",
	SubSection:    "Deploy WAF setup for each public web service",
	Service:       "WAFv2",
	Type:          "Discuss",
	Checks:        []string{"apigateway_restapi_waf_acl_attached", "cloudfront_distributions_using_waf", "elbv2_waf_acl_attached"},
}
var accsec_Enable_Shield_Advanced_automatic_application_layer_DDoS_mitigation = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Enable Shield Advanced automatic application layer DDoS mitigation",
	Description:   "Activate automatic application layer Distributed Denial of Service (DDoS) mitigation within Shield Advanced.",
	Section:       "WAFv2",
	Service:       "Shield Advanced",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Configure_R53_health_checks_for_all_protected_resources = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Configure R53 health checks for all protected resources",
	Description:   "Establishing Amazon Route 53 (R53) health checks to monitor the well-being of all safeguarded resources.",
	Section:       "WAFv2",
	Service:       "Route53",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Configure_sensitive_fields_redaction_and_send_WAF_logs_to_SIEM = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Configure sensitive fields redaction and send WAF logs to SIEM",
	Description:   "Configure the redaction of sensitive fields and transmit Web Application Firewall (WAF) logs to the Security Information and Event Management (SIEM) system.",
	Section:       "WAFv2",
	Service:       "WAFv2",
	Type:          "Manual",
	Checks:        []string{},
}
var accsec_Export_metrics_in_centralized_collector_1 = &NistComp{
	Framework:     "AWS-Account-Security-Onboarding",
	Provider:      "AWS",
	Frameworkdesc: "Checklist when onboarding new AWS Accounts to existing AWS Organization.",
	Id:            "Export metrics in centralized collector",
	Description:   "Exporting metrics to a centralized collector for comprehensive data aggregation.",
	Section:       "WAFv2",
	Service:       "CloudWatch",
	Type:          "Automated",
	Checks:        []string{"wafv2_webacl_logging_enabled"},
}
